"""
Module qu·∫£n l√Ω d·ªØ li·ªáu ƒë·∫°i l√Ω b·∫£o hi·ªÉm, k·∫øt n·ªëi v·ªõi ArangoDB.
"""

from arango import ArangoClient

class Agency:
    def __init__(self, name, region, manager):
        # L∆∞u th√¥ng tin ƒë·∫°i l√Ω
        self.name = name
        self.region = region
        self.manager = manager

    def __str__(self):
        return f"{self.name} ({self.region}) - Managed by {self.manager}"

    def to_dict(self):
        # Chuy·ªÉn ƒë·ªïi  th√†nh dict ƒë·ªÉ l∆∞u v√†o db
        return {
            "name": self.name,
            "region": self.region,
            "manager": self.manager
        }

class AgencyDatabase:
    """
    Qu·∫£n l√Ω thao t√°c v·ªõi ArangoDB: th√™m, truy v·∫•n, hi·ªÉn th·ªã danh s√°ch ƒë·∫°i l√Ω.
    """

    def __init__(self, db_name="agency_db", collection_name="agencies"):
        # Connect database
        client = ArangoClient()
        self.sys_db = client.db("_system", username="root", password="123456")
        # N·∫øu database ch∆∞a t·ªìn t·∫°i th√¨ t·∫°o m·ªõi
        if not self.sys_db.has_database(db_name):
            self.sys_db.create_database(db_name)
        # Connect database ch√≠nh
        self.db = client.db(db_name, username="root", password="123456")
        # N·∫øu collection ch∆∞a t·ªìn t·∫°i th√¨ t·∫°o m·ªõi
        if not self.db.has_collection(collection_name):
            self.collection = self.db.create_collection(collection_name)
        else:
            self.collection = self.db.collection(collection_name)

    def bring_on_new_agency(self, name, region, manager):
        # T·∫°o Agency m·ªõi
        new_agency = Agency(name, region, manager)
        self.collection.insert(new_agency.to_dict())
        print(f"‚úÖ Th√™m ƒë·∫°i l√Ω '{name}' v√†o CSDL.")

    def show_me_all_the_agencies(self):
        # List all ƒë·∫°i l√Ω trong collection, tr·∫£ v·ªÅ list dict cho Flask
        agencies = list(self.collection.all())
        result = []
        for agency in agencies:
            result.append({
                "name": agency.get("name", ""),
                "region": agency.get("region", ""),
                "manager": agency.get("manager", "")
            })
        return result

    def find_agencies_by_name(self, search_term):
        # T√¨m ki·∫øm ƒë·∫°i l√Ω theo t√™n
        query = f"""
        FOR agency IN {self.collection.name}
            FILTER CONTAINS(LOWER(agency.name), LOWER(@search_term))
            RETURN agency
        """
        cursor = self.db.aql.execute(query, bind_vars={'search_term': search_term})
        results = list(cursor)

        if not results:
            print(f"‚ùå Kh√¥ng t√¨m th·∫•y ƒë·∫°i l√Ω t√™n '{search_term}'")
        else:
            print(f"\nüîç K·∫øt qu·∫£ t√¨m ki·∫øm '{search_term}':")
            for agency in results:
                print(f"- {agency['name']} ({agency['region']}) - Qu·∫£n l√Ω: {agency['manager']}")
        return results
